/* Modern Minimalist UI Design - Enhanced April 2025 */
/* Enhanced for Accessibility & Reduced Motion */
:root {
  --primary: #0a84ff;          /* Vibrant blue for primary actions */
  --primary-rgb: 10, 132, 255; /* RGB for rgba() */
  --primary-hover: #0054d2;      /* Slightly darker blue for hover */
  --danger: #ff453a;           /* Red for dangerous actions */
  --danger-hover: #d32f2f;       /* Darker red for hover */
  --surface: #000;              /* Deep dark background */
  --surface-rgb: 0, 0, 0;       /* RGB for rgba() */
  --surface-2: #121212;          /* Slightly lighter surface for cards/sections */
  --surface-3: #1c1c1e;          /* Hover/Active surface, input backgrounds */
  --text: #e5e5e5;             /* Light grey text */
  --text-secondary: #9a9a9f;      /* Dimmer text (Updated contrast) */
  --text-rgb: 229, 229, 229;     /* --- NEW: RGB for text color --- */
  --border-color: rgba(148, 163, 184, 0.18); /* Subtle border */
  --radius-lg: 16px;             /* Consistent rounding */
  --radius-md: 12px;
  --radius-sm: 8px;
  --font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; /* System font stack fallback */
  --transition-speed: 0.2s;
  --transition-speed-fast: 0.1s; /* --- NEW: Faster transition for subtle changes --- */
  --top-bar-height: 65px;        /* Define top bar height for content padding */
  --focus-outline-color: rgba(var(--primary-rgb), 0.7); /* Outline color for focus-visible */
  --disabled-opacity: 0.6;       /* --- NEW: Consistent disabled opacity --- */
}

@media (prefers-color-scheme: light) {
  :root {
    --primary: #007aff;
    --primary-rgb: 0, 122, 255;
    --primary-hover: #0056b3;
    --danger: #dc3545;
    --danger-hover: #c82333;
    --surface: #f2f2f7;
    --surface-rgb: 242, 242, 247;
    --surface-2: #ffffff;
    --surface-3: #e5e5ea;
    --text: #1c1c1e;
    --text-secondary: #5a5a5e; /* Updated contrast */
    --text-rgb: 28, 28, 30;    /* --- NEW: RGB for text color --- */
    --border-color: rgba(60, 60, 67, 0.20); /* Slightly darker border */
    /* --focus-outline-color remains the same (blue) */
  }
}

/* --- Base & Reset --- */
*, *::before, *::after {
  box-sizing: border-box;
  /* --- ENHANCEMENT: Removed font smoothing - often debated, rely on OS --- */
  /* -webkit-font-smoothing: antialiased; */
  /* -moz-osx-font-smoothing: grayscale; */
}

html {
   /* --- ENHANCEMENT: Smooth scrolling preference --- */
   scroll-behavior: smooth;
}

body {
  font-family: var(--font-family);
  background-color: var(--surface);
  color: var(--text);
  margin: 0;
  padding: 0;
  line-height: 1.6;
  font-size: 100%; /* Base for rem units */
}

/* --- Layout Containers --- */
.details-container { /* Targets the root element (e.g., <div id="extension-details">) */
  max-width: 800px;
  margin: 0 auto;
  padding: 0; /* Padding handled by content area */
  min-height: 100vh;
}

#details-content { /* Targets the main scrollable area (likely generated by JS) */
  padding: 20px;
  /* Add padding top equal to or more than the sticky top bar height */
  padding-top: calc(var(--top-bar-height) + 20px);
}

/* --- Sticky Top Bar (#details-top-bar generated by JS) --- */
/* Consider adding role="toolbar" in JS if it contains interactive controls */
.details-topbar {
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 20px;
  height: var(--top-bar-height);
  background-color: rgba(var(--surface-rgb), 0.85);
  backdrop-filter: blur(12px) saturate(180%);
  -webkit-backdrop-filter: blur(12px) saturate(180%); /* Safari */
  border-bottom: 1px solid var(--border-color);
  transition: background-color var(--transition-speed) ease, border-color var(--transition-speed) ease;
}

.topbar-left {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-shrink: 1;
  min-width: 0; /* Important for flex shrinking with overflow */
}

.extension-icon-topbar {
  width: 36px;
  height: 36px;
  border-radius: var(--radius-sm);
  object-fit: cover;
  flex-shrink: 0;
  /* --- ACCESSIBILITY: Ensure alt text is provided in HTML --- */
}

.extension-name-topbar { /* Should be a heading (e.g., <h1> or <h2>) in HTML */
  /* --- ENHANCEMENT: Use rem unit --- */
  font-size: 1.125rem; /* ~18px */
  font-weight: 600;
  margin: 0;
  color: var(--text);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.topbar-right {
  display: flex;
  align-items: center;
  gap: 10px;
  flex-shrink: 0;
}
.self-indicator {
  font-size: 0.85em; /* em is fine here, relative to parent */
  color: var(--text-secondary);
  font-style: italic;
  margin-left: 8px; /* Give it some space */
}

/* --- Content Sections --- */
/* Use <section> elements in HTML with appropriate aria-labelledby if needed */
.details-section {
  background-color: var(--surface-2);
  border-radius: var(--radius-lg);
  padding: 20px 25px;
  margin-bottom: 25px;
  border: 1px solid var(--border-color);
  box-shadow: 0 2px 10px rgba(var(--surface-rgb), 0.05);
  transition: background-color var(--transition-speed) ease, border-color var(--transition-speed) ease;
}

.details-section h3 { /* Ensure this is semantically correct (h3 if following h2) */
  font-size: 1.0rem; /* ~16px */
  font-weight: 600;
  color: var(--text-secondary);
  margin-top: 0;
  margin-bottom: 18px;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--border-color);
  transition: color var(--transition-speed) ease, border-color var(--transition-speed) ease;
}

/* --- Info Section Styling --- */
.info-section p.detail-line {
  display: flex;
  align-items: baseline; /* Align text baselines */
  gap: 8px;
  margin-bottom: 12px;
  font-size: 0.95rem; /* ~15px */
  line-height: 1.5;
  flex-wrap: wrap;
}

.info-section p.detail-line .icon {
  width: 1.125em; /* Size relative to font size */
  height: 1.125em;
  flex-shrink: 0;
  color: var(--text-secondary);
  opacity: 0.9;
  margin-top: 0.1em; /* Fine-tune vertical alignment */
  /* --- ACCESSIBILITY: Ensure icon has textual equivalent or aria-hidden="true" in HTML --- */
}

.info-section code {
  font-family: 'SF Mono', 'Menlo', 'Consolas', monospace;
  background-color: var(--surface-3);
  padding: 3px 6px;
  border-radius: var(--radius-sm);
  font-size: 0.9em; /* Relative to parent font size */
  color: var(--text);
  margin-right: 5px;
  overflow-wrap: break-word;
  display: inline-block;
  vertical-align: baseline; /* Align with text */
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}

.info-section span.status-text {
    font-weight: 500;
}

/* Inline Copy Button */
.copy-button-inline {
  font-family: var(--font-family);
  padding: 2px 6px;
  font-size: 0.75rem; /* ~12px */
  line-height: 1.2;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-color);
  background-color: var(--surface-3);
  color: var(--text-secondary);
  cursor: pointer;
  transition: all var(--transition-speed-fast) ease;
  margin-left: 4px;
  vertical-align: baseline; /* Align with text/code */
}

.copy-button-inline:hover:not(:disabled) {
  background-color: var(--primary);
  border-color: var(--primary);
  color: #fff; /* Ensure contrast */
}

.copy-button-inline:disabled {
  cursor: default;
  opacity: var(--disabled-opacity);
  background-color: var(--primary); /* Keep style when copied */
  color: #fff;
  border-color: var(--primary);
}
/* --- ACCESSIBILITY: JS should update aria-label (e.g., "Copy ID", "ID Copied") --- */


/* Incognito Icon Styling */
#incognito-status .icon {
  width: 1.125em;
  height: 1.125em;
  flex-shrink: 0;
  color: var(--text-secondary);
  opacity: 0.6;
  transition: color var(--transition-speed) ease, opacity var(--transition-speed) ease;
  /* --- ACCESSIBILITY: Ensure text explains state, or use aria-label on icon --- */
}
#incognito-status .icon.incognito-allowed { /* Class added by JS */
  opacity: 1;
  color: var(--primary);
}


/* --- Links Section --- */
.links-section p.detail-link {
  margin-bottom: 10px;
  display: flex;
  align-items: baseline; /* Align baseline of icon and link */
  gap: 8px;
  font-size: 0.95rem; /* ~15px */
}
.links-section .icon {
  width: 1.125em;
  height: 1.125em;
  flex-shrink: 0;
  color: var(--text-secondary);
  opacity: 0.9;
  margin-top: 0.1em; /* Fine-tune */
  /* --- ACCESSIBILITY: Ensure icon has textual equivalent or aria-hidden="true" in HTML --- */
}
.links-section a {
  font-weight: 500;
  color: var(--primary);
  text-decoration: none; /* Underline on hover only */
  transition: color var(--transition-speed) ease, text-decoration-color var(--transition-speed) ease;
  background: none;
  overflow-wrap: break-word;
  outline-offset: 2px; /* For focus */
  text-decoration-line: underline;
  text-decoration-color: transparent; /* Hide underline initially */
  text-underline-offset: 3px; /* Space underline from text */
}
.links-section a:hover,
.links-section a:focus { /* Show underline on hover/focus */
  color: var(--primary-hover);
  text-decoration-color: var(--primary-hover); /* Use color for underline */
}
/* Remove pseudo-elements if they existed */
.links-section a::before, .links-section a::after {
  display: none;
}


/* --- Description Section --- */
.description-section p.description {
  color: var(--text-secondary); /* Uses updated variable */
  font-size: 0.95rem; /* ~15px */
  line-height: 1.7;
  margin: 0;
}


/* --- Permissions Section Styling --- */
.permissions-box {
    /* Inherits .details-section styles - can add overrides here if needed */
}

/* Permissions Search */
.permission-search-container {
  margin-bottom: 20px;
  position: relative;
  /* --- ACCESSIBILITY: Consider adding <label> in HTML or aria-label --- */
}

#permission-search {
  width: 100%;
  padding: 10px 15px;
  padding-right: 35px; /* Space for potential clear button */
  font-size: 0.95rem; /* ~15px */
  font-family: var(--font-family);
  background-color: var(--surface-3);
  color: var(--text);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  transition: border-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease, background-color var(--transition-speed) ease, color var(--transition-speed) ease;
  outline: none; /* Use focus-visible */
}

#permission-search::placeholder {
  color: var(--text-secondary);
  opacity: 0.8;
  transition: color var(--transition-speed) ease;
}

#permission-search:focus { /* Style for when actively focused, even without keyboard */
   border-color: var(--primary);
   box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.2);
}

/* --- Permissions Grid --- */
.permissions-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(280px, 100%), 1fr)); /* Responsive columns */
  gap: 15px;
  margin-bottom: 20px;
}

.permission-item {
  background-color: var(--surface); /* Different background from section */
  border-radius: var(--radius-md);
  padding: 15px;
  border: 1px solid var(--border-color);
  transition: transform var(--transition-speed-fast) ease, box-shadow var(--transition-speed) ease, background-color var(--transition-speed) ease, border-color var(--transition-speed) ease;
  overflow: hidden;
}
.permission-item:hover {
  /* --- UI: Subtle lift on hover --- */
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  border-color: rgba(var(--text-rgb), 0.15); /* Slightly highlight border */
}

/* Class added by JS for hidden items */
/* --- ACCESSIBILITY: JS should ideally use display:none or add aria-hidden="true" --- */
.permission-item-hidden {
    /* This class is just a selector hook for JS; actual hiding is done via JS */
    /* display: none; */ /* Example if JS doesn't handle it */
}

.permission-item-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start; /* Align top */
  margin-bottom: 8px;
  gap: 8px;
}

.permission-name {
  font-size: 0.95rem; /* ~15px */
  font-weight: 600;
  color: var(--text);
  margin: 0;
  overflow-wrap: break-word;
  flex-grow: 1;
  transition: color var(--transition-speed) ease;
}

.permission-risk {
  font-size: 0.75rem; /* ~12px */
  font-weight: 500;
  padding: 3px 8px;
  border-radius: var(--radius-sm);
  text-transform: capitalize;
  white-space: nowrap;
  flex-shrink: 0;
  margin-top: 2px; /* Align better with name */
  border: 1px solid transparent; /* Base border */
  /* --- ACCESSIBILITY: Ensure color contrast is sufficient on badge backgrounds --- */
}
/* --- UI: Added slight border to badges for better definition, especially in light mode --- */
.risk-low { background-color: rgba(46, 204, 113, 0.2); color: #2ecc71; border-color: rgba(46, 204, 113, 0.3); }
.risk-medium { background-color: rgba(241, 196, 15, 0.2); color: #f1c40f; border-color: rgba(241, 196, 15, 0.3); }
.risk-high { background-color: rgba(231, 76, 60, 0.2); color: #e74c3c; border-color: rgba(231, 76, 60, 0.3); }
.risk-unknown { background-color: rgba(149, 165, 166, 0.2); color: #95a5a6; border-color: rgba(149, 165, 166, 0.3); }

.permission-description {
  font-size: 0.85rem; /* ~13.6px */
  color: var(--text-secondary); /* Uses updated variable */
  margin: 0;
  line-height: 1.5;
  transition: color var(--transition-speed) ease;
}

/* Show More/Less Button */
#permissions-toggle-btn { /* JS should toggle text content and potentially aria-expanded */
  display: block; /* Make it block level */
  width: auto; /* Allow natural width */
  margin: 15px auto 0; /* Center button if width is auto */
  padding: 10px 20px; /* Adjusted padding */
  font-size: 0.9rem; /* ~14.4px */
  font-weight: 500;
  text-align: center;
  background-color: var(--surface-3);
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease, border-color var(--transition-speed) ease, transform var(--transition-speed-fast) ease;
  /* Inherit base button styles */
}
#permissions-toggle-btn:hover:not(:disabled) {
  background-color: var(--primary);
  color: #fff;
  border-color: var(--primary);
  transform: translateY(-1px);
}
#permissions-toggle-btn:disabled {
    opacity: var(--disabled-opacity);
    cursor: not-allowed;
    transform: none;
}

/* --- General Button Styling --- */
button {
  font-family: var(--font-family);
  padding: 8px 16px;
  border: none;
  border-radius: var(--radius-md);
  background: var(--primary);
  color: #fff; /* Ensure contrast */
  font-size: 0.9rem; /* ~14.4px */
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-speed-fast) ease; /* Faster transition for buttons */
  white-space: nowrap;
  outline-offset: 2px; /* For focus */
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}
button:hover:not(:disabled) {
  background-color: var(--primary-hover);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(var(--primary-rgb), 0.2);
}
/* --- ENHANCEMENT: Add active state --- */
button:active:not(:disabled) {
    transform: translateY(0px); /* Reset lift */
    filter: brightness(0.95); /* Subtle press effect */
    box-shadow: none;
}
button:disabled {
  opacity: var(--disabled-opacity);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}
button.danger-button {
  background-color: var(--danger);
}
button.danger-button:hover:not(:disabled) {
  background-color: var(--danger-hover);
  box-shadow: 0 2px 8px rgba(255, 69, 58, 0.2); /* Use danger color for shadow */
}
button.danger-button:active:not(:disabled) {
    background-color: var(--danger-hover); /* Keep darker color */
    filter: brightness(0.95);
    transform: translateY(0px);
    box-shadow: none;
}
button.secondary {
  background-color: var(--surface-3);
  color: var(--text); /* Use main text for better contrast */
  border: 1px solid var(--border-color);
}
button.secondary:hover:not(:disabled) {
    background-color: var(--surface-3); /* Keep bg */
    border-color: var(--text-secondary); /* Subtle border highlight */
    color: var(--text);
    box-shadow: none;
    transform: none; /* No lift for secondary */
}
button.secondary:active:not(:disabled) {
    background-color: var(--surface-3); /* Keep bg */
    filter: brightness(0.95); /* Press effect */
    border-color: var(--text-secondary);
    transform: none;
    box-shadow: none;
}


/* --- Focus Visible --- */
/* Provides visible focus styles ONLY when navigating via keyboard (or equivalent) */
/* This avoids outlines appearing on mouse clicks */
button:focus-visible,
a:focus-visible,
input:focus-visible, /* Basic style for other inputs */
.copy-button-inline:focus-visible,
#permissions-toggle-btn:focus-visible {
    outline: 2px solid var(--focus-outline-color);
    outline-offset: 2px;
    box-shadow: none; /* Override hover shadows if focused */
}
/* Special case for permission search which uses box-shadow for focus */
#permission-search:focus-visible {
    outline: none; /* Use the box-shadow instead */
    border-color: var(--primary); /* Ensure border color changes too */
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.3); /* Slightly stronger glow */
}


/* --- Utility Classes --- */
.info-message {
  background-color: rgba(var(--primary-rgb), 0.1);
  border-left: 3px solid var(--primary);
  border-radius: var(--radius-md);
  padding: 15px 20px;
  margin: 15px 0;
  font-size: 0.9rem; /* ~14.4px */
  color: var(--text);
  transition: background-color var(--transition-speed) ease, border-color var(--transition-speed) ease, color var(--transition-speed) ease;
  /* --- ACCESSIBILITY: Consider adding role="status" if message appears dynamically --- */
}
.info-message.no-results { /* Example for no search results */
    border-left-color: var(--text-secondary);
    background-color: rgba(142, 142, 147, 0.1);
}

.error-box {
  background-color: rgba(255, 69, 58, 0.1);
  border-left: 3px solid var(--danger);
  border-radius: var(--radius-md);
  padding: 15px 20px;
  margin-bottom: 20px;
  color: var(--text);
  transition: background-color var(--transition-speed) ease, border-color var(--transition-speed) ease, color var(--transition-speed) ease;
  /* --- ACCESSIBILITY: Consider adding role="alert" if it appears dynamically --- */
}
.error-box p {
  margin: 0;
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.9rem; /* ~14.4px */
  font-weight: 500;
}
.error-icon {
  width: 1.125em;
  height: 1.125em;
  flex-shrink: 0;
  color: var(--danger);
  /* --- ACCESSIBILITY: Ensure icon has textual equivalent or aria-hidden="true" --- */
}

/* --- Loading Indicator --- */
.loading-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  min-height: 200px;
  color: var(--text-secondary);
  transition: color var(--transition-speed) ease;
  /* --- ACCESSIBILITY: Consider adding role="status" and aria-live="polite" --- */
}
.spinner {
  border: 4px solid var(--surface-3);
  border-radius: 50%;
  border-top-color: var(--primary);
  width: 30px;
  height: 30px;
  animation: spin 0.8s linear infinite;
  margin-bottom: 15px;
  transition: border-color var(--transition-speed) ease;
}
@keyframes spin { to { transform: rotate(360deg); } }
.loading-placeholder {
  font-size: 1rem; /* ~16px */
  font-weight: 500;
  margin: 0;
}

/* --- Toast Notification --- */
/* --- ACCESSIBILITY: JS should add role="status" or role="alert" and aria-live attribute --- */
.toast-notification {
  position: fixed;
  bottom: 20px;
  /* --- ENHANCEMENT: Center horizontally for wider viewports? Optional. --- */
  /* left: 50%; transform: translateX(-50%); */
  /* Or keep to corner */
  right: 20px;
  padding: 12px 20px;
  border-radius: var(--radius-md);
  color: #fff !important; /* Force white text for contrast on colored backgrounds */
  font-size: 0.9rem; /* ~14.4px */
  font-weight: 500;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  z-index: 10000;
  opacity: 0;
  transform: translateY(10px); /* Start below */
  transition: opacity var(--transition-speed) ease, transform var(--transition-speed) ease;
  pointer-events: none; /* Prevent interaction while invisible */
}
/* --- ENHANCEMENT: Animate in when JS makes it visible (e.g., adds opacity: 1 or a class) --- */
.toast-notification.show { /* Assuming JS adds class 'show' */
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto; /* Allow interaction if needed (e.g., close button) */
}
/* Assign specific colors based on class from JS */
/* Check contrast for these background colors with white text (#fff) - All seem WCAG AA compliant */
.toast-info { background-color: #5ac8fa; } /* Info Blue */
.toast-success { background-color: #34c759; } /* Success Green */
.toast-error { background-color: #ff3b30; } /* Error Red */


/* --- Modal --- */
/* --- ACCESSIBILITY: JS should add role="dialog", aria-modal="true", and manage focus trapping --- */
.modal-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.7); /* Slightly darker overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 5000;
  backdrop-filter: blur(5px);
  opacity: 0; /* Start hidden */
  transition: opacity var(--transition-speed) ease;
  pointer-events: none; /* Prevent interaction when hidden */
  /* --- JS must add the '.show' class to make this visible --- */
}
.modal-overlay.show {
  opacity: 1;
  pointer-events: auto; /* Allow interaction when shown */
}
.modal-content {
  background-color: var(--surface-2);
  padding: 25px 30px;
  border-radius: var(--radius-lg);
  max-width: 400px;
  width: 90%;
  box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);
  border: 1px solid var(--border-color);
  transform: scale(0.95);
  transition: transform var(--transition-speed) ease, background-color var(--transition-speed) ease, border-color var(--transition-speed) ease;
  /* Apply scale effect only when overlay is shown */
}
.modal-overlay.show .modal-content {
  transform: scale(1);
}
.modal-content h3 { /* Should likely be <h2> if base page uses <h1> */
  margin-top: 0;
  margin-bottom: 15px;
  font-size: 1.2rem; /* ~19px */
  color: var(--text);
  transition: color var(--transition-speed) ease;
}
.modal-content p {
  margin-bottom: 25px;
  font-size: 0.95rem; /* ~15px */
  color: var(--text-secondary); /* Uses updated variable */
  line-height: 1.6;
  transition: color var(--transition-speed) ease;
}
.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  flex-wrap: wrap; /* Allow buttons to wrap on small modals */
}

/* --- Scrollbar Styles --- */
/* Note: Scrollbar styling is non-standard and may not work in all browsers (esp. Firefox) */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: var(--surface);
  border-radius: 10px;
}
::-webkit-scrollbar-thumb {
  background: var(--surface-3);
  border-radius: 10px;
  border: 2px solid var(--surface); /* Padding effect */
}
::-webkit-scrollbar-thumb:hover {
  background: var(--text-secondary);
}
/* --- ENHANCEMENT: Add Firefox scrollbar styles (optional, less customizable) --- */
@supports (scrollbar-color: auto) {
  * {
    scrollbar-color: var(--surface-3) var(--surface);
    scrollbar-width: thin;
  }
}


/* --- Reduced Motion --- */
@media (prefers-reduced-motion: reduce) {
  html {
    /* Disable smooth scrolling */
    scroll-behavior: auto !important;
  }

  *,
  *::before,
  *::after {
    /* Disable most animations and transitions */
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    transition-delay: 0ms !important;
  }

  /* --- Allow minimal fade for visibility toggles --- */
  .modal-overlay,
  .modal-content,
  .toast-notification {
      /* Keep the transition property for opacity/transform */
      /* but the duration is overridden above, making it instant */
      /* Or uncomment below for a *very* brief fade if preferred */
      /* transition-duration: 50ms !important; */
  }

  /* --- Disable effects causing motion --- */
  .details-topbar {
      backdrop-filter: none !important; /* Remove blur */
      -webkit-backdrop-filter: none !important;
  }
  .modal-overlay {
      backdrop-filter: none !important; /* Remove blur */
  }

  /* --- Prevent hover transforms --- */
  button:hover:not(:disabled),
  #permissions-toggle-btn:hover:not(:disabled),
  .permission-item:hover {
    transform: none !important;
  }

   /* --- Prevent hover/active box-shadows (unless needed for focus) --- */
  button:hover:not(:disabled),
  button:active:not(:disabled),
  #permissions-toggle-btn:hover:not(:disabled),
  .permission-item:hover {
    box-shadow: none !important; /* Disable hover shadows */
  }
   /* Re-apply base shadow for permission items if needed */
  .permission-item:hover {
      /* Keep original shadow if desired even without transform */
      /* box-shadow: 0 2px 10px rgba(var(--surface-rgb), 0.05) !important; */
  }


  /* Reset spinner animation */
  .spinner {
      animation: none !important;
      /* Make spinner static and less visually demanding */
      border-top-color: var(--surface-3) !important;
      border-left-color: var(--surface-3) !important; /* Make it a full, static ring */
  }
}
